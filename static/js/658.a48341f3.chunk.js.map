{"version":3,"file":"static/js/658.a48341f3.chunk.js","mappings":"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","sources":["services/moviesApi.js","webpack://goit-react-hw-05-movies/./src/components/MovieDescription/MovieDescription.module.css?8aaf","components/MovieDescription/MovieDescription.js","components/BtnGoBack/BtnGoBack.js","components/MovieCard/MovieCard.js","views/MovieDetailsView.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst apiKey = '419dfd451284fd57cfd962fe73165683';\n\nasync function fetchMovie(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchMovie(`${BASE_URL}/trending/all/day?api_key=${apiKey}&page=1`);\n}\n\nexport function fetchMovieDetails(movie_id) {\n  return fetchMovie(\n    `${BASE_URL}/movie/${movie_id}?api_key=${apiKey}&language=en-US`,\n  );\n}\n\nexport function fetchMovieCredits(movie_id) {\n  return fetchMovie(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${apiKey}&language=en-US`,\n  );\n}\n\nexport function fetchMovieReviews(movie_id) {\n  return fetchMovie(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${apiKey}&language=en-US&page=1`,\n  );\n}\n\nexport function fetchMovieQuery(query) {\n  return fetchMovie(\n    `${BASE_URL}/search/movie?api_key=${apiKey}&language=en-US&include_adult=false&query=${query}`,\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieDescription_title__uH8LG\",\"imgPoster\":\"MovieDescription_imgPoster__Im10J\",\"movieInfo\":\"MovieDescription_movieInfo__yik5C\"};","import styles from './MovieDescription.module.css';\n\nexport default function MovieDescription(props) {\n  const { title, date, poster_path, vote_average, overview, genres } = props;\n\n  return (\n    <>\n      <h1 className={styles.title}>\n        {title} ({date})\n      </h1>\n      <div className={styles.movieInfo}>\n        {poster_path && (\n          <img\n            className={styles.imgPoster}\n            src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${poster_path}`}\n            alt=\"\"\n          />\n        )}\n        <div>\n          <p>\n            <b>Rating:</b> {vote_average}\n          </p>\n          <p>\n            <b>Overview:</b> {overview}\n          </p>\n          <p>\n            <b>Genres:</b> {genres.join(', ')}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n}\n","export default function BtnGoBack(props) {\n  const { onClick } = props;\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Go back\n    </button>\n  );\n}\n","import React from 'react';\nimport { useEffect, useState, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\nimport { Route } from 'react-router';\nimport MovieDescription from '../MovieDescription';\nimport { fetchMovieDetails } from '../../services/moviesApi';\nimport Container from '../Container';\nimport BtnGoBack from '../BtnGoBack/BtnGoBack';\n\nconst Cast = lazy(() => import('../Cast/Cast.js'));\nconst Reviews = lazy(() => import('../Reviews/Reviews.js'));\n\nexport default function MovieCard(props) {\n  const location = useLocation();\n  const history = useHistory();\n\n  const { url, path } = useRouteMatch();\n  const { movie_id } = useParams();\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [date, setDate] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchMovieDetails(movie_id).then(movie => {\n      setMovie(movie);\n      setGenres(movie.genres);\n      setDate(movie.release_date);\n      setIsLoading(true);\n    });\n  }, [movie_id]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setDate(date.substr(0, 4));\n\n      const getGenresNames = array => {\n        return array.map(item => item.name);\n      };\n      setGenres(getGenresNames(genres));\n    }\n  }, [isLoading]);\n\n  const handleGoBack = () => {\n    history.push(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      <BtnGoBack onClick={handleGoBack} />\n\n      <Container>\n        <MovieDescription\n          poster_path={movie.poster_path}\n          title={movie.title}\n          vote_average={movie.vote_average}\n          overview={movie.overview}\n          date={date}\n          genres={genres}\n        />\n        <hr />\n\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink\n              to={{\n                pathname: `${url}/reviews`,\n                state: { from: location },\n              }}\n            >\n              Reviews\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to={{\n                pathname: `${url}/cast`,\n                state: { from: location },\n              }}\n            >\n              Cast\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<h2>Loading...</h2>}>\n          <Route path={`${path}/reviews`}>\n            <Reviews />\n          </Route>\n          <Route path={`${path}/cast`}>\n            <Cast />\n          </Route>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchMovieDetails } from '../services/moviesApi';\nimport MovieCard from '../components/MovieCard';\n\nexport default function MovieDetailsView() {\n  const { movie_id } = useParams();\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    fetchMovieDetails(movie_id).then(setMovie);\n  }, [movie_id]);\n\n  return (\n    <>\n      <MovieCard movie={movie} />\n    </>\n  );\n}\n"],"names":["BASE_URL","apiKey","fetchMovie","url","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","fetchMovieQuery","query","MovieDescription","props","title","date","poster_path","vote_average","overview","genres","className","styles","src","alt","join","BtnGoBack","onClick","type","Cast","lazy","Reviews","MovieCard","location","useLocation","history","useHistory","useRouteMatch","path","useParams","useState","movie","setMovie","setGenres","setDate","isLoading","setIsLoading","useEffect","then","release_date","substr","map","item","name","push","state","from","Container","to","pathname","Suspense","fallback","MovieDetailsView"],"sourceRoot":""}